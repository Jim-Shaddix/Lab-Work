function indices_of_interest = Pick_Peak_Interval(tdms_data, peak_str,peak_ref,interval_size, discrim_method, check)
%PICK_PEAK_INTERVAL 

    % ALLOCATE: return value
    indices_of_interest = zeros(1,length(tdms_data));
    
    % refferernce frequency, gets updated for each loop iteration
    freq_ref = peak_ref;
    
    % SET: indices_of_interest
    for i = 1:length(tdms_data)
        
        % GET: Peaks
        peaks = tdms_data(i).(peak_str);
                
        % SET: interval
        mmin = freq_ref-interval_size/2;
        mmax = freq_ref+interval_size/2;
        
        % GET: peaks in the interval
        indices_in_interval = [];
        for j = 1:length(peaks)
            if peaks(j).Frequencies > mmin && ...
               peaks(j).Frequencies < mmax
                indices_in_interval(end+1) = j;
            end
        end
        
        % SKIP: condition
        %if isempty(indices_in_interval) == 1
        %   continue 
        %end
        
        switch discrim_method
            case 'height'
                largest_height = 0;
                for j = 1:length(indices_in_interval)
                    if peaks(indices_in_interval(j)).mag > largest_height
                        indices_of_interest(i) = indices_in_interval(j);
                    end
                end
            case 'frequency'
                nearest_freq = 0;
                for j = 1:length(indices_in_interval)
                    if abs(peaks(indices_in_interval(j)).Frequencies -  freq_ref) < nearest_freq 
                        indices_of_interest(i) = indices_in_interval(j);
                    end
                end
                
            case 'manual'
                disp('I have not implemented the manual method!!!!')  
        end
        
        % UPDATE: frequency refference
        freq_ref = peaks(indices_of_interest(i)).Frequencies;
        
        %% CHECK: Plot: magnitude data
        if check == 1
            fig = figure();
            % get plot_info struct to plot
            plot_info = Get_Plot_Struct();

            % MODIFY: plot info
            plot_info.preprocess = tdms_data(i).plot_info.preprocess;
            plot_info.mag  = 1;
            plot_info.peaks_mag_given = [1,0];
            Plot_File(tdms_data(i),plot_info);

            % Plot: dashed line at the peak of interest
            y_lim=get(gca,'ylim');
            plot(gca,[peak_ref, peak_ref],y_lim,'r--','DisplayName','original_freq');
            plot(gca,[freq_ref, freq_ref],y_lim,'b--','DisplayName','freq found');

            % Plot: interval
            if strcmp(discrim_method, 'height') || strcmp(discrim_method, 'frequency')
                plot(gca,[mmin, mmin],y_lim,'k','DisplayName','minimum');
                plot(gca,[mmax, mmax],y_lim,'k','DisplayName','maximum');
            end

            title(["Temperature: ",tdms_data(i).temperature])
            xlabel("Frequency (khz)")
            ylabel("Voltage (V)")
            legend()

            uiwait(fig);
        end
        
    end

    
end
